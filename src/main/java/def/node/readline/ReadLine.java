package def.node.readline;
import def.node.Buffer;
import def.js.Function;
@jsweet.lang.Interface
public abstract class ReadLine extends def.node.events.EventEmitter {
    native public void setPrompt(String prompt);
    native public void prompt(Boolean preserveCursor);
    native public void question(String query, java.util.function.Consumer<String> callback);
    native public ReadLine pause();
    native public ReadLine resume();
    native public void close();
    native public void write(String data, Key key);
    native public ReadLine addListener(String event, Function listener);
    native public ReadLine addListener(def.node.StringTypes.close event, java.lang.Runnable listener);
    native public ReadLine addListener(def.node.StringTypes.line event, java.util.function.Consumer<Object> listener);
    native public ReadLine addListener(def.node.StringTypes.pause event, java.lang.Runnable listener);
    native public ReadLine addListener(def.node.StringTypes.resume event, java.lang.Runnable listener);
    native public ReadLine addListener(def.node.StringTypes.SIGCONT event, java.lang.Runnable listener);
    native public ReadLine addListener(def.node.StringTypes.SIGINT event, java.lang.Runnable listener);
    native public ReadLine addListener(def.node.StringTypes.SIGTSTP event, java.lang.Runnable listener);
    native public Boolean emit(String event, Object... args);
    native public Boolean emit(def.node.StringTypes.close event);
    native public Boolean emit(def.node.StringTypes.line event, Object input);
    native public Boolean emit(def.node.StringTypes.pause event);
    native public Boolean emit(def.node.StringTypes.resume event);
    native public Boolean emit(def.node.StringTypes.SIGCONT event);
    native public Boolean emit(def.node.StringTypes.SIGINT event);
    native public Boolean emit(def.node.StringTypes.SIGTSTP event);
    native public ReadLine on(String event, Function listener);
    native public ReadLine on(def.node.StringTypes.close event, java.lang.Runnable listener);
    native public ReadLine on(def.node.StringTypes.line event, java.util.function.Consumer<Object> listener);
    native public ReadLine on(def.node.StringTypes.pause event, java.lang.Runnable listener);
    native public ReadLine on(def.node.StringTypes.resume event, java.lang.Runnable listener);
    native public ReadLine on(def.node.StringTypes.SIGCONT event, java.lang.Runnable listener);
    native public ReadLine on(def.node.StringTypes.SIGINT event, java.lang.Runnable listener);
    native public ReadLine on(def.node.StringTypes.SIGTSTP event, java.lang.Runnable listener);
    native public ReadLine once(String event, Function listener);
    native public ReadLine once(def.node.StringTypes.close event, java.lang.Runnable listener);
    native public ReadLine once(def.node.StringTypes.line event, java.util.function.Consumer<Object> listener);
    native public ReadLine once(def.node.StringTypes.pause event, java.lang.Runnable listener);
    native public ReadLine once(def.node.StringTypes.resume event, java.lang.Runnable listener);
    native public ReadLine once(def.node.StringTypes.SIGCONT event, java.lang.Runnable listener);
    native public ReadLine once(def.node.StringTypes.SIGINT event, java.lang.Runnable listener);
    native public ReadLine once(def.node.StringTypes.SIGTSTP event, java.lang.Runnable listener);
    native public ReadLine prependListener(String event, Function listener);
    native public ReadLine prependListener(def.node.StringTypes.close event, java.lang.Runnable listener);
    native public ReadLine prependListener(def.node.StringTypes.line event, java.util.function.Consumer<Object> listener);
    native public ReadLine prependListener(def.node.StringTypes.pause event, java.lang.Runnable listener);
    native public ReadLine prependListener(def.node.StringTypes.resume event, java.lang.Runnable listener);
    native public ReadLine prependListener(def.node.StringTypes.SIGCONT event, java.lang.Runnable listener);
    native public ReadLine prependListener(def.node.StringTypes.SIGINT event, java.lang.Runnable listener);
    native public ReadLine prependListener(def.node.StringTypes.SIGTSTP event, java.lang.Runnable listener);
    native public ReadLine prependOnceListener(String event, Function listener);
    native public ReadLine prependOnceListener(def.node.StringTypes.close event, java.lang.Runnable listener);
    native public ReadLine prependOnceListener(def.node.StringTypes.line event, java.util.function.Consumer<Object> listener);
    native public ReadLine prependOnceListener(def.node.StringTypes.pause event, java.lang.Runnable listener);
    native public ReadLine prependOnceListener(def.node.StringTypes.resume event, java.lang.Runnable listener);
    native public ReadLine prependOnceListener(def.node.StringTypes.SIGCONT event, java.lang.Runnable listener);
    native public ReadLine prependOnceListener(def.node.StringTypes.SIGINT event, java.lang.Runnable listener);
    native public ReadLine prependOnceListener(def.node.StringTypes.SIGTSTP event, java.lang.Runnable listener);
    native public void prompt();
    native public void write(String data);
    native public void write(Buffer data, Key key);
    native public void write(Buffer data);
}

